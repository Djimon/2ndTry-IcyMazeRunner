class Playmenu.cs

Sprite spBG;
Sprite spMain;
Sprite SpSelect;
Sprite spFG;

Texture txBG = new Texture("Pfad");
Texture txMainfull = new Texture("Pfad");
Texture txMainsingle = new Texture("Pfad");
Texture txNewGame = new Texture("Pfad");
Texture txContinue = new Texture("Pfad");
Texture txFG = new Texture("Pfad");

int select;
bool closePlay;
bool saved;

public void setClosePlay(bool isclosed)
{
	closePlay = isclosed;
}

public bool getClosePlay()
{
	return closePlay
}


// ~~~Konstruktor~~~
public Playmenu()
{
	isPressed = false;
	closePlay = false;
	saved = false;
	// Überprüfen, ob ein Savegame existiert. (can-find)
	// wenn ja da saved = true;
	
	spBG = new Sprite(txBG);
	if (!saved) spMain = new Sprite(txMainsingle);
	else spMain = new Sprite(txMainfull);
	spSelect = new SPrite(txNewGame);
	spFG = new Sprite(txFG);


	MView = new View(FloatRec(0,0,Game.WindowSizeX, Game.WindowSizeX));

	 
}

EGameStates update()
{
[...]

if (!saved) 
{
	if (Keyboard.isKeyPressed(Keyboard.Key.Return) && !isPressed)
	{
		return EGameStates.InGame; //(new Game)
		isPressed = true;
	}
	if (Keyboard.isKeyPressed(Keyboard.Key.Escape) && !isPressed)
	{
		setClosePlay(true);
	}

	if (!Keyboard.isKeyPressed(Keyboard.Key.Return) && !Keyboard.isKeyPressed(Keyboard.Key.Escape))
	{	
		isPressed = false;
	}  
}
else
{
	if (Keyboard.IsKExPressed(Keyboard.Key.Down) && !isPressed)
	{
		select = (select -1) % 2;
		isPressed = true;
	}
	if (Keyboard.IsKExPressed(Keyboard.Key.Up) && !isPressed)
	{
		select = (select +1) % 2;
		isPressed = true;
	}

	if (!Keyboard.IsKeyPressed(Keyboard.Key.Down) && !Keyboard.IsKeyPressed(Keyboard.Key.Up))
                isPressed = false;


	switch(select)
	{
	case 0: spSelected.Texture = txNewGame;
		break;
	case 1: spSelected.Texture = txContinue;
		break;
	}


	if (Keyboard.IsKeyPressed(Keyboard.Key.Escape))
	{
		setClosePlay(true);
	}
	if (select == 0 && Keyboard.IsKeyPressed(Keyboard.Key.Return))
	{
		return EGamestates.InGame;//(New)
	}
	if (select == 1 && Keyboard.IsKeyPressed(Keyboard.Key.Return))
	{
		return EGameStates.Ingame;//(Load)	
	}	



}
[...]

return EGameStates.MainMenu;
}
